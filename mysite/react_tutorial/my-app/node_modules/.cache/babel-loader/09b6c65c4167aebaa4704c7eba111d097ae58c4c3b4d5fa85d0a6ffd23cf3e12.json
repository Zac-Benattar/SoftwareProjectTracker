{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loisp\\\\Documents\\\\GitHub\\\\SoftwareProjectTracker\\\\mysite\\\\react_tutorial\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// To remember things, components use state\n// React components have state by setting this.state in their constructors \n// class Square extends React.Component {\n\n//     // // Constructor of class -  initialises the state\n//     // constructor(props) {\n//     //   // Always need to call super when defining the constructor of a subclass\n//     //   super(props);\n//     //   this.state = {\n//     //     value: null,\n//     //   };\n//     // }\n\n//     render() {\n//       return (\n//         <button \n//           className=\"square\" \n//           onClick={() => this.props.onClick()}\n//         >\n//           {this.props.value}\n//         </button>\n//       );\n//     }\n//   }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n// Passing a prop from parent Board --> child Square.\n// This is how information flows in React apps.\n\n// Store the game's state in this component rather that in each square.\n// Board componenet can tell each square what to display by passing a prop. \n_c = Square;\nclass Board extends React.Component {\n  // Initial state: contains array of 9 nulls corresponding to 9 squares.\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square\n    // Passing down two props from board to square\n    , {\n      value: this.state.squares[i]\n\n      // onClick is a function that Square can call when clicked\n      ,\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }\n  render() {\n    const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 15\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","status","Game","root","createRoot","document","getElementById"],"sources":["C:/Users/loisp/Documents/GitHub/SoftwareProjectTracker/mysite/react_tutorial/my-app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\n// To remember things, components use state\r\n// React components have state by setting this.state in their constructors \r\n// class Square extends React.Component {\r\n\r\n//     // // Constructor of class -  initialises the state\r\n//     // constructor(props) {\r\n//     //   // Always need to call super when defining the constructor of a subclass\r\n//     //   super(props);\r\n//     //   this.state = {\r\n//     //     value: null,\r\n//     //   };\r\n//     // }\r\n\r\n//     render() {\r\n//       return (\r\n//         <button \r\n//           className=\"square\" \r\n//           onClick={() => this.props.onClick()}\r\n//         >\r\n//           {this.props.value}\r\n//         </button>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n  function Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n\r\n        {props.value}\r\n      </button>\r\n    )\r\n  }\r\n  \r\n  // Passing a prop from parent Board --> child Square.\r\n  // This is how information flows in React apps.\r\n\r\n  // Store the game's state in this component rather that in each square.\r\n  // Board componenet can tell each square what to display by passing a prop. \r\n  class Board extends React.Component {\r\n    // Initial state: contains array of 9 nulls corresponding to 9 squares.\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        xIsNext: true,\r\n      };\r\n    }\r\n\r\n    handleClick(i) {\r\n      const squares = this.state.squares.slice();\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        squares: squares,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n    }\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square \r\n          // Passing down two props from board to square\r\n          value={this.state.squares[i]}\r\n\r\n          // onClick is a function that Square can call when clicked\r\n          onClick={() => this.handleClick(i)}\r\n    \r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      const status = 'Next player: ' + \r\n      (this.state.xIsNext ? 'X': 'O');\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n  root.render(<Game />);\r\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEE,SAASC,MAAM,CAACC,KAAK,EAAE;EACrB,oBACE;IAAQ,SAAS,EAAC,QAAQ;IAAC,OAAO,EAAEA,KAAK,CAACC,OAAQ;IAAA,UAE/CD,KAAK,CAACE;EAAK;IAAA;IAAA;IAAA;EAAA,QACL;AAEb;;AAEA;AACA;;AAEA;AACA;AAAA,KAbSH,MAAM;AAcf,MAAMI,KAAK,SAASN,KAAK,CAACO,SAAS,CAAC;EAClC;EACAC,WAAW,CAACL,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACM,KAAK,GAAG;MACXC,OAAO,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC5BC,OAAO,EAAE;IACX,CAAC;EACH;EAEAC,WAAW,CAACC,CAAC,EAAE;IACb,MAAML,OAAO,GAAG,IAAI,CAACD,KAAK,CAACC,OAAO,CAACM,KAAK,EAAE;IAC1CN,OAAO,CAACK,CAAC,CAAC,GAAG,IAAI,CAACN,KAAK,CAACI,OAAO,GAAG,GAAG,GAAG,GAAG;IAC3C,IAAI,CAACI,QAAQ,CAAC;MACZP,OAAO,EAAEA,OAAO;MAChBG,OAAO,EAAE,CAAC,IAAI,CAACJ,KAAK,CAACI;IACvB,CAAC,CAAC;EACJ;EAEAK,YAAY,CAACH,CAAC,EAAE;IACd,oBACE,QAAC;IACC;IAAA;MACA,KAAK,EAAE,IAAI,CAACN,KAAK,CAACC,OAAO,CAACK,CAAC;;MAE3B;MAAA;MACA,OAAO,EAAE,MAAM,IAAI,CAACD,WAAW,CAACC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAEnC;EAEN;EAEAI,MAAM,GAAG;IACP,MAAMC,MAAM,GAAG,eAAe,IAC7B,IAAI,CAACX,KAAK,CAACI,OAAO,GAAG,GAAG,GAAE,GAAG,CAAC;IAE/B,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC,QAAQ;QAAA,UAAEO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAO,eACtC;QAAK,SAAS,EAAC,WAAW;QAAA,WACvB,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,WACvB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,WACvB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,EACpB,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,MAAMG,IAAI,SAASrB,KAAK,CAACO,SAAS,CAAC;EACjCY,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACL,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAA;UAAA;UAAA;QAAA,QAAqB;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;;AAEA;;AAEA,MAAMG,IAAI,GAAGrB,QAAQ,CAACsB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACH,MAAM,eAAC,QAAC,IAAI;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}