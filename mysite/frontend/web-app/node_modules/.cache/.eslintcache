[{"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\index.js":"1","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\App.js":"2","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\reportWebVitals.js":"3","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\utils\\PrivateRoute.js":"4","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\context\\AuthContext.js":"5","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Register.jsx":"6","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Homepage.jsx":"7","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ProjectListItem.js":"8","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\Dropdown.jsx":"9","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ProgressBar.jsx":"10","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Login.jsx":"11","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Projects.jsx":"12","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\PeopleView.jsx":"13","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\Navbar.js":"14","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ListPeople.js":"15","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Overview.jsx":"16","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\NavbarElems.jsx":"17","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Project.jsx":"18","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\HomeNavbar.js":"19","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\MemberInput.jsx":"20"},{"size":1402,"mtime":1677779414377,"results":"21","hashOfConfig":"22"},{"size":695,"mtime":1677779414375,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1677169554436,"results":"24","hashOfConfig":"22"},{"size":318,"mtime":1677700932281,"results":"25","hashOfConfig":"26"},{"size":2667,"mtime":1677700932265,"results":"27","hashOfConfig":"26"},{"size":1496,"mtime":1677779414378,"results":"28","hashOfConfig":"22"},{"size":10982,"mtime":1677903191117,"results":"29","hashOfConfig":"22"},{"size":1397,"mtime":1677783958716,"results":"30","hashOfConfig":"22"},{"size":2164,"mtime":1677901838402,"results":"31","hashOfConfig":"22"},{"size":634,"mtime":1677779414376,"results":"32","hashOfConfig":"22"},{"size":1980,"mtime":1677705397237,"results":"33","hashOfConfig":"22"},{"size":2893,"mtime":1677785258938,"results":"34","hashOfConfig":"22"},{"size":1052,"mtime":1677774709878,"results":"35","hashOfConfig":"22"},{"size":1117,"mtime":1677793339306,"results":"36","hashOfConfig":"22"},{"size":1205,"mtime":1677781311849,"results":"37","hashOfConfig":"22"},{"size":2844,"mtime":1677767820889,"results":"38","hashOfConfig":"22"},{"size":1846,"mtime":1677767775252,"results":"39","hashOfConfig":"22"},{"size":277,"mtime":1677778730231,"results":"40","hashOfConfig":"22"},{"size":375,"mtime":1677800631589,"results":"41","hashOfConfig":"22"},{"size":461,"mtime":1677847962681,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hsjxm1",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xti3i",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\index.js",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\App.js",["111"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\utils\\PrivateRoute.js",["112"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\context\\AuthContext.js",["113"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Register.jsx",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Homepage.jsx",["114","115","116","117","118","119","120","121","122","123","124","125"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Homepage.css\";\r\nimport { Dropdown } from \"../components/Dropdown\";\r\nimport { ProjectListItem } from \"../components/ProjectListItem\";\r\nimport Calendar from \"react-calendar\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport HomeNavbar from \"../components/HomeNavbar\";\r\nimport MemberInput from \"../components/MemberInput\";\r\n\r\n\r\n\r\nexport const Homepage = () => {\r\n\r\n  const options = [\r\n      {value: \"name\", label:\"Project Name\"},\r\n      {value: \"deadline_date\", label: \"Deadline\"},\r\n      {value: \"start_date\", label: \"Start Date\"},\r\n      {value: \"progress\", label: \"Progress completed\"}\r\n  ];\r\n\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectDescription, setProjectDescription] = useState(\"\");\r\n  const [projectBudget, setProjectBudget] = useState(\"\");\r\n  const [projectStart, setProjectStart] = useState(\"\");\r\n  const [projectDeadline, setProjectDeadline] = useState(\"\");\r\n  const [projectMembers, setProjectMembers] = useState(\"\");\r\n  const [roleName, setRoleName] = useState(\"\");\r\n  const [roleDescription, setRoleDescription] = useState(\"\");\r\n\r\n  // list to store members in a project\r\n  const [membersList, setMembersList] = useState([{member: \"\"}]); \r\n\r\n\r\n  \r\n\r\n  console.log(membersList);\r\n  const handleServiceAdd = () => {\r\n    setMembersList([...membersList, {member:\"\"}]);\r\n  }\r\n\r\n  const handleServiceRemove = (index) => {\r\n    const list = [...membersList];\r\n    list.splice(index, 1);\r\n    setMembersList(list);\r\n  }\r\n\r\n  const handleServiveChange = (e,  index) => {\r\n    const {name, value} = e.target; \r\n    const list = [...membersList];\r\n    list[index][name]=value;\r\n    setMembersList(list);\r\n  }\r\n\r\n\r\n  const [date,setDate] = useState(new Date());\r\n\r\n  let [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  let getProjects = async () => {\r\n    let response = await fetch(\"/api/projects/\");\r\n    let data = await response.json();\r\n    console.log(\"Data:\", data);\r\n    setProjects(data);\r\n  };\r\n\r\n\r\n  let [allRoles, setRoles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getRoles();\r\n  }, []);\r\n\r\n  let getRoles = async () => {\r\n    let response = await fetch(\"/api/roles/\");\r\n    let data = await response.json();\r\n    console.log(\"Data:\", data);\r\n    setRoles(data);\r\n  };\r\n\r\n  const roleNames = \r\n  allRoles.map(role =>( { key:role.id}, {label:role.name} ));\r\n\r\n  console.log(roleNames);\r\n\r\n\r\n  const addProject = () => {\r\n    var modal = document.getElementById(\"add-project-modal\");\r\n    var span = document.getElementsByClassName(\"close\")[0];\r\n    modal.style.display = \"block\";\r\n    span.onclick = function() {\r\n      modal.style.display = \"none\";\r\n    }\r\n    window.onclick = function(event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n  }\r\n  const addRole = () => {\r\n    var modal = document.getElementById(\"add-role-modal\");\r\n    var span = document.getElementsByClassName(\"role-close\")[0];\r\n    modal.style.display = \"block\";\r\n    span.onclick = function() {\r\n      modal.style.display = \"none\";\r\n    }\r\n    window.onclick = function(event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n      <>\r\n      <HomeNavbar/> \r\n      <div id=\"add-project-modal\" className=\"modal\">\r\n        <div className=\"modal-content\"> \r\n              \r\n              <span className=\"close\">&times;</span>\r\n\r\n              <h1>Create New Project</h1>\r\n\r\n              <span className = \"project_name\">\r\n                  <label forHtml = \"project_name\" className = \"inputLabels\">Project Name: </label>\r\n                  <input \r\n                  type = \"text\" \r\n                  required id = \"project_name\" \r\n                  name = \"project_name\" \r\n                  placeholder = \"Project Name\" \r\n                  className = \"projectInputs\" \r\n                  onChange={event=> setProjectName(event.target.value)}>\r\n                  </input>\r\n              </span>\r\n\r\n                <span className = \"project_description\">\r\n                    <label forHtml = \"project_description\" className = \"inputLabels\">Project Description: </label>\r\n                    <input \r\n                    type = \"text\" \r\n                    required id = \"project_description\" \r\n                    name = \"project_description\" \r\n                    placeholder = \"Project Description\" \r\n                    className = \"projectInputs\" \r\n                    onChange = {event => setProjectDescription(event.target.value)}>\r\n                    </input>\r\n                </span>\r\n\r\n                <span className = \"project_budget\">\r\n                    \r\n                    <label \r\n                          forHtml = \"project_budget\"\r\n                          className = \"inputLabels\">\r\n                            Project Budget: \r\n                    </label>\r\n                    \r\n                    <input \r\n                      type = \"text\" \r\n                      required id = \"project_budget\" \r\n                      name = \"project_budget\" \r\n                      placeholder = \"Project Budget\" \r\n                      className = \"projectInputs\" \r\n                      onChange = {event => setProjectBudget(event.target.value)}>\r\n                    </input>\r\n                </span>\r\n\r\n                <span className = \"project_deadline\">\r\n                    \r\n                    <label \r\n                          forHtml = \"project_deadine\"\r\n                          className = \"inputLabels\">\r\n                            Project Deadline: \r\n                    </label>\r\n                    \r\n                    <input \r\n                      type = \"text\" \r\n                      required id = \"project_deadline\" \r\n                      name = \"project_deadline\" \r\n                      placeholder = \"Project Deadline\" \r\n                      className = \"projectInputs\" \r\n                      onChange = {event => setProjectDeadline(event.target.value)}>\r\n                    </input>\r\n                </span>\r\n\r\n                <span className = \"project_start\">\r\n                    \r\n                    <label \r\n                          forHtml = \"project_start\"\r\n                          className = \"inputLabels\">\r\n                            Project Start Date: \r\n                    </label>\r\n                    \r\n                    <input \r\n                      type = \"text\" \r\n                      required id = \"project_start\" \r\n                      name = \"project_start\" \r\n                      placeholder = \"Project Start\" \r\n                      className = \"projectInputs\" \r\n                      onChange = {event => setProjectStart(event.target.value)}>\r\n                    </input>\r\n                </span>           \r\n\r\n                <label htmlFor=\"member\"> Member(s) </label>\r\n                {membersList.map((singleMember,index) => (\r\n                   <>                  \r\n                   <div key = {index} className=\"members\">\r\n                  <input name=\"member\" type=\"text\" id=\"member\" placeholder=\"Member Username\" required\r\n                  value = {singleMember.member}\r\n                  onChange={(e)=>handleServiveChange(e, index )}/>\r\n                  {membersList.length - 1 === index   && \r\n                  (\r\n                  <button onClick={handleServiceAdd}> <span> Add a member </span></button>\r\n                  )}\r\n\r\n                  <Dropdown classname=\"add-proj-drop\" placeHolder=\"Select Role\" options={roleNames}/>\r\n\r\n                  <button onClick={addRole}> Role not here? Add a new one. </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"second-div\">\r\n                    <button onClick={()=>handleServiceRemove(index)}> <span> Remove Button </span></button>\r\n                  </div>\r\n                  </>\r\n                  \r\n                ))}\r\n \r\n                <span>\r\n                  <button className=\"create-project-btn\">Create Project</button>\r\n                </span>\r\n                \r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"new-role-modal\" id=\"add-role-modal\">\r\n\r\n      <div className=\"role-modal-content\"> \r\n              \r\n              <span className=\"role-close\">&times;</span>\r\n              <span className = \"role-name\">\r\n                  <label forHtml = \"role-name\" className = \"role-input-labels\">Role Name: </label>\r\n                  <input \r\n                  type = \"text\" \r\n                  required id = \"role_name\" \r\n                  name = \"role_name\" \r\n                  placeholder = \"Role Name\" \r\n                  className = \"projectInputs\" \r\n                  onChange={event=> setRoleName(event.target.value)}>\r\n                  </input>\r\n              </span>\r\n\r\n                <span className = \"role-description\">\r\n                    <label forHtml = \"role-description\" className = \"role-input-labels\">Role Description: </label>\r\n                    <input \r\n                    type = \"text\" \r\n                    required id = \"role_description\" \r\n                    name = \"role_description\" \r\n                    placeholder = \"Role Description\" \r\n                    className = \"projectInputs\" \r\n                    onChange = {event => setRoleDescription(event.target.value)}>\r\n                    </input>\r\n                </span>\r\n\r\n                <button> Add new role! </button>\r\n\r\n      </div>\r\n      \r\n      </div>\r\n      \r\n      <div className=\"home-page\">\r\n\r\n      <div className=\"left_side\">\r\n\r\n        <div className=\"user-profile\"> \r\n\r\n            <h2 className=\"user-title\">\r\n\r\n                Welcome, Username\r\n\r\n            </h2>\r\n\r\n            <p className=\"user-info\">\r\n                Role in project: Role\r\n            </p>\r\n        </div>\r\n\r\n\r\n        <div className=\"calander-container\">\r\n            <Calendar onChange={setDate} value={date}/>\r\n        </div>\r\n\r\n        <p className='text-center'>\r\n            <span className='bold'>Selected Date:</span>{' '}\r\n            {date.toDateString()}\r\n        </p>\r\n      </div>\r\n         \r\n\r\n      <div className=\"all_projects\">\r\n          <div className=\"top-of-page\"> \r\n\r\n              <button  \r\n              className= \"add-proj-btn\" \r\n              onClick = {addProject}> \r\n              Add Project \r\n              </button>\r\n              \r\n              <h2 className=\"dropdown-title\"> \r\n                  ORDER BY:\r\n              </h2>\r\n              \r\n              <div className=\"dropdown-menu\">\r\n                  <Dropdown placeHolder=\"Select ...\" options={options}/>\r\n              </div>\r\n          \r\n\r\n          </div>      \r\n        \r\n      <div className=\"projects-list\">\r\n        {projects.map((project, index) => (\r\n          <ProjectListItem key={index} project={project} />\r\n        ))}\r\n      </div>\r\n\r\n      </div>\r\n\r\n      </div>\r\n\r\n\r\n     \r\n      </>     \r\n   \r\n  );\r\n}\r\n","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ProjectListItem.js",["126"],[],"import React from \"react\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\nimport { Homepage } from \"../pages/Homepage\";\r\nimport \"../pages/Homepage.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const ProjectListItem = ({ project }) => {\r\n\r\n \r\n  const passing_data = {\r\n    name: project.name,\r\n    id: project.id,\r\n    description: project.description,\r\n    i_budget: project.initial_budget,\r\n    c_budget: project.current_budget,\r\n    i_deadline: project.initial_deadline,\r\n    c_deadline: project.current_deadline,\r\n    methodology: project.methodology,\r\n  };\r\n\r\n  return (\r\n    \r\n\r\n      <div className=\"project_container\">\r\n        <Link to=\"/project\" state = {passing_data}>\r\n          <div className=\"title\">\r\n            <h1>{project.name}</h1>\r\n          </div>\r\n        </Link>\r\n       \r\n        <div className=\"progress-bar\">\r\n          <ProgressBar progress=\"30\" />\r\n        </div>\r\n        <div className=\"info_container\">\r\n          <div className=\"info\">\r\n            <p>Current Budget: £{project.current_budget}</p>\r\n            <p>Current Deadline: {project.current_deadline}</p>\r\n            <p>Methodology: {project.methodology}</p>\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>Here there will be some info</p>\r\n            <p>Some more info </p>\r\n            <p>Some other info</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n  );\r\n};\r\n",[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\Dropdown.jsx",["127","128"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ProgressBar.jsx",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Login.jsx",["129"],[],"import React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport const Login = (props) => {\r\n    const[email, setEmail] = useState('');\r\n    const[password, setPass] = useState('');\r\n\r\n    const[authenticated, setAuthenticated] = useState(localStorage.getItem(\"authenticated\")||false);\r\n\r\n  \r\n    const [error, setError] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // Temporary user \r\n    const adminUser = {\r\n        email: \"admin@admin.com\",\r\n        password: \"admin123\"\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        // page gets reloaded and state gets lost\r\n        e.preventDefault()\r\n\r\n        if (email === adminUser.email && password === adminUser.password) {\r\n            setAuthenticated(true)\r\n            localStorage.setItem(\"authenticated\",true);\r\n            navigate(\"/homepage\")\r\n        } else {\r\n            setError(\"Details do not match!\")\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <form className=\"login-form\" onSubmit = {handleSubmit}>\r\n                <h2> Login Page! </h2>\r\n                {(error!==\"\") ? (<div className=\"error\">{error}</div>) : \"\"}\r\n            \r\n                <label htmlfor=\"email\">Email:</label>\r\n                <input value={email} onChange={(e)=>setEmail(e.target.value)}\r\n                type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\"/>\r\n        \r\n              \r\n            \r\n                <label htmlfor = \"password\">Password:</label>\r\n                <input value = {password} onChange={(e)=>setPass(e.target.value)}\r\n                type = \"password\" placeholder=\"********\" id=\"password\" name=\"password\"/>\r\n            \r\n            \r\n                <button className=\"login-button\"> Log-in </button>\r\n            </form>\r\n            <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Register here</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Projects.jsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],[],"import React from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {ListPeople }from \"../components/ListPeople\";\r\n\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n\r\n\r\nexport const Projects = (props) => {\r\n\r\n\r\n\r\n    const location = useLocation();\r\n    const state = location.state;\r\n    let [projects, setProjects] = useState([]);\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    let getProjects = async () => {\r\n        let response = await fetch('/api/projects/'+state.id+'/members/');\r\n        let data = await response.json();\r\n        console.log(\"Data:\", data);\r\n        setProjects(data);\r\n    };\r\n\r\n    const passing_data = {\r\n        name: state.name,\r\n        id: state.id,\r\n    };\r\n\r\n\r\n\r\n    const [clientName, setName] = useState('');\r\n    const [releaseDate, setDate] = useState();\r\n    const [methodology, setMethodology] = '';\r\n    const requirements = 0;\r\n    const design = 0;\r\n    const implementation = 0;\r\n    const unittesting = 0;\r\n    const integration = 0;\r\n    const riskScore = 0;\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <div className=\"home-page\">\r\n        <div className=\"risk-info-container\">\r\n                <div className=\"project-risk-score\">\r\n                    <p> This project has a {riskScore}% chance of success.</p>\r\n                    <p> Your project currently has 0 recommendations. </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"project-info-container\">\r\n                <div className=\"project-name\">\r\n                    <h1>{state.name}</h1>\r\n                </div>\r\n                <div className=\"project-description\">\r\n                    <h3 className=\"des-title\"> Project Description: </h3>\r\n                    <p className=\"des\">{state.description}</p>\r\n                    <h3 className=\"des-title\"> Project methodology: </h3>\r\n                    <p  className=\"des\">{state.methodology}</p>\r\n                    <h3 className=\"des-title\"> Project budget: </h3>\r\n                    <p className=\"des\">  {state.i_budget}</p>\r\n                    <h3 className=\"des-title\"> Project deadine: </h3>\r\n                    <p className=\"des\"> {state.i_deadline}</p>\r\n\r\n                </div>\r\n\r\n                <button className=\"proj-button\">Pause project progress</button>\r\n                <button className=\"proj-button\">Push back project deadline</button>\r\n            </div>  \r\n           \r\n        </div>\r\n        </>     \r\n    );\r\n\r\n      \r\n    //     <div> \r\n\r\n    //         <h2> \r\n    //             This is the projects page for {state.name}!\r\n    //         </h2>\r\n\r\n    //         <h3>\r\n    //             <Link to=\"/people\" state={passing_data}>\r\n    //                 People\r\n    //             </Link>\r\n    //         </h3>\r\n                \r\n\r\n    //     </div>\r\n    // )\r\n}","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\PeopleView.jsx",["146","147"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"./Homepage.css\";\r\nimport { ListPeople } from \"../components/ListPeople\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n\r\nexport const PeopleView = (props) => {\r\n\r\n\r\n    const location = useLocation();\r\n    const state = location.state;\r\n\r\n\r\n    let [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPeople();\r\n    }, []);\r\n\r\n    let getPeople = async () => {\r\n        let response = await fetch('/api/projects/'+state.id+'/members/');\r\n        let data = await response.json();\r\n        console.log(\"Data:\", data);\r\n        setPeople(data);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <Navbar/>\r\n\r\n        <div className=\"home-page\">\r\n\r\n            <div className=\"all-containers\">\r\n                {people.map((people, index) => (\r\n                <ListPeople key={index} member={people} />\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n        \r\n        \r\n        </>\r\n        \r\n\r\n\r\n    )\r\n}","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\Navbar.js",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\ListPeople.js",["148","149","150","151"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Overview.jsx",["152","153"],[],"import React, {useEffect, useState} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport const OverviewForm = () => {\r\n\r\n    //need check if user is project manager\r\n    //pass through boolean isprojectmanager - will toggle form accordingly to disable fields\r\n    \r\n    const [clientName, setName] = useState('');\r\n    const [releaseDate, setDate] = useState();\r\n    const [methodology, setMethodology] = '';\r\n    const requirements = 0;\r\n    const design = 0;\r\n    const implementation = 0;\r\n    const unittesting = 0;\r\n    const integration = 0;\r\n    const riskScore = 0;\r\n\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <div>\r\n        <div className=\"project_container\">\r\n            <div className=\"info\">\r\n                    <p>Methodology</p>\r\n                    <select value={methodology} onChange={() => setMethodology(this.selectedOption)}>\r\n                        <option>Waterfall</option>\r\n                        <option>Agile</option>\r\n                    </select>\r\n            </div>\r\n            <div className=\"info\">\r\n                    <p>Client</p>\r\n                    <input value={clientName} onChange={(e)=>setName(e.target.value)} \r\n                     type=\"text\" placeholder=\"Client Name\" id=\"clientname\" name=\"clientname\"/>\r\n            </div>\r\n            <div className=\"info\">\r\n                    <p>Release Date</p>\r\n                    <input value={releaseDate} onChange={(e)=>setDate(e.target.value)} \r\n                     type=\"date\" id=\"releaseDate\" name=\"releaseDate\"/>\r\n            </div>\r\n        </div> \r\n        <div className=\"project_container\">\r\n            <div className=\"title\">\r\n                <h1>Description</h1>\r\n            </div>\r\n            <div className=\"info_container\">\r\n                <div className=\"info\">\r\n                    <p>Project description</p>\r\n                </div>\r\n                <br/>\r\n                <div className=\"info\">\r\n                    <ul>\r\n                        <li> Requirements: {requirements}% Complete </li>\r\n                        <li> Design: {design}% Complete </li>\r\n                        <li> Implementation: {implementation}% Complete </li>\r\n                        <li> Unit Testing: {unittesting}% Complete </li>\r\n                        <li> Integration Testing: {integration}% Complete </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n            <div className=\"info_container\">\r\n                <div className=\"info\">\r\n                    <p> Risk Score: {riskScore}% Success Chance</p>\r\n                </div>\r\n            </div>\r\n            <button>Pause project</button>\r\n            <button>Push back project</button>\r\n        </div>\r\n        </>     \r\n     \r\n    );\r\n}\r\n\r\nexport default OverviewForm;\r\n","C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\NavbarElems.jsx",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\pages\\Project.jsx",[],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\HomeNavbar.js",["154"],[],"C:\\Users\\loisp\\Documents\\GitHub\\SoftwareProjectTracker\\mysite\\frontend\\web-app\\src\\components\\MemberInput.jsx",[],[],{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":99,"column":6,"nodeType":"162","endLine":99,"endColumn":27,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"164","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":44},{"ruleId":"155","severity":1,"message":"165","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":19},{"ruleId":"155","severity":1,"message":"166","line":21,"column":10,"nodeType":"157","messageId":"158","endLine":21,"endColumn":21},{"ruleId":"155","severity":1,"message":"167","line":22,"column":10,"nodeType":"157","messageId":"158","endLine":22,"endColumn":28},{"ruleId":"155","severity":1,"message":"168","line":23,"column":10,"nodeType":"157","messageId":"158","endLine":23,"endColumn":23},{"ruleId":"155","severity":1,"message":"169","line":24,"column":10,"nodeType":"157","messageId":"158","endLine":24,"endColumn":22},{"ruleId":"155","severity":1,"message":"170","line":25,"column":10,"nodeType":"157","messageId":"158","endLine":25,"endColumn":25},{"ruleId":"155","severity":1,"message":"171","line":26,"column":10,"nodeType":"157","messageId":"158","endLine":26,"endColumn":24},{"ruleId":"155","severity":1,"message":"172","line":26,"column":26,"nodeType":"157","messageId":"158","endLine":26,"endColumn":43},{"ruleId":"155","severity":1,"message":"173","line":27,"column":10,"nodeType":"157","messageId":"158","endLine":27,"endColumn":18},{"ruleId":"155","severity":1,"message":"174","line":28,"column":10,"nodeType":"157","messageId":"158","endLine":28,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":85,"column":39,"nodeType":"177","messageId":"178","endLine":85,"endColumn":40},{"ruleId":"155","severity":1,"message":"179","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"180","line":42,"column":9,"nodeType":"157","messageId":"158","endLine":42,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":68,"column":24,"nodeType":"183","messageId":"184","endLine":68,"endColumn":75},{"ruleId":"155","severity":1,"message":"185","line":9,"column":11,"nodeType":"157","messageId":"158","endLine":9,"endColumn":24},{"ruleId":"155","severity":1,"message":"186","line":2,"column":9,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"187","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":19},{"ruleId":"155","severity":1,"message":"188","line":16,"column":10,"nodeType":"157","messageId":"158","endLine":16,"endColumn":18},{"ruleId":"160","severity":1,"message":"189","line":22,"column":8,"nodeType":"162","endLine":22,"endColumn":10,"suggestions":"190"},{"ruleId":"155","severity":1,"message":"191","line":31,"column":11,"nodeType":"157","messageId":"158","endLine":31,"endColumn":23},{"ruleId":"155","severity":1,"message":"192","line":38,"column":12,"nodeType":"157","messageId":"158","endLine":38,"endColumn":22},{"ruleId":"155","severity":1,"message":"193","line":38,"column":24,"nodeType":"157","messageId":"158","endLine":38,"endColumn":31},{"ruleId":"155","severity":1,"message":"194","line":39,"column":12,"nodeType":"157","messageId":"158","endLine":39,"endColumn":23},{"ruleId":"155","severity":1,"message":"195","line":39,"column":25,"nodeType":"157","messageId":"158","endLine":39,"endColumn":32},{"ruleId":"155","severity":1,"message":"196","line":40,"column":12,"nodeType":"157","messageId":"158","endLine":40,"endColumn":23},{"ruleId":"155","severity":1,"message":"197","line":40,"column":25,"nodeType":"157","messageId":"158","endLine":40,"endColumn":39},{"ruleId":"155","severity":1,"message":"198","line":41,"column":11,"nodeType":"157","messageId":"158","endLine":41,"endColumn":23},{"ruleId":"155","severity":1,"message":"199","line":42,"column":11,"nodeType":"157","messageId":"158","endLine":42,"endColumn":17},{"ruleId":"155","severity":1,"message":"200","line":43,"column":11,"nodeType":"157","messageId":"158","endLine":43,"endColumn":25},{"ruleId":"155","severity":1,"message":"201","line":44,"column":11,"nodeType":"157","messageId":"158","endLine":44,"endColumn":22},{"ruleId":"155","severity":1,"message":"202","line":45,"column":11,"nodeType":"157","messageId":"158","endLine":45,"endColumn":22},{"ruleId":"155","severity":1,"message":"186","line":4,"column":9,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"203","line":19,"column":8,"nodeType":"162","endLine":19,"endColumn":10,"suggestions":"204"},{"ruleId":"155","severity":1,"message":"205","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"179","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"186","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"206","line":14,"column":8,"nodeType":"162","endLine":14,"endColumn":10,"suggestions":"207"},{"ruleId":"155","severity":1,"message":"208","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"209","line":2,"column":9,"nodeType":"157","messageId":"158","endLine":2,"endColumn":17},{"ruleId":"155","severity":1,"message":"210","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":28},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'useRef' is defined but never used.","'MemberInput' is defined but never used.","'projectName' is assigned a value but never used.","'projectDescription' is assigned a value but never used.","'projectBudget' is assigned a value but never used.","'projectStart' is assigned a value but never used.","'projectDeadline' is assigned a value but never used.","'projectMembers' is assigned a value but never used.","'setProjectMembers' is assigned a value but never used.","'roleName' is assigned a value but never used.","'roleDescription' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Homepage' is defined but never used.","'isSelected' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'authenticated' is assigned a value but never used.","'Link' is defined but never used.","'ListPeople' is defined but never used.","'projects' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.",["212"],"'passing_data' is assigned a value but never used.","'clientName' is assigned a value but never used.","'setName' is assigned a value but never used.","'releaseDate' is assigned a value but never used.","'setDate' is assigned a value but never used.","'methodology' is assigned a value but never used.","'setMethodology' is assigned a value but never used.","'requirements' is assigned a value but never used.","'design' is assigned a value but never used.","'implementation' is assigned a value but never used.","'unittesting' is assigned a value but never used.","'integration' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPeople'. Either include it or remove the dependency array.",["213"],"'ProgressBar' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["214"],"'useEffect' is defined but never used.","'Navigate' is defined but never used.","'useLocation' is defined but never used.",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"223","text":"224"},"Update the dependencies array to be: [getProjects]",{"range":"225","text":"226"},"Update the dependencies array to be: [getPeople]",{"range":"227","text":"228"},"Update the dependencies array to be: [getUsers]",{"range":"229","text":"230"},[2506,2527],"[authTokens, loading, updateToken]",[466,468],"[getProjects]",[453,455],"[getPeople]",[364,366],"[getUsers]"]