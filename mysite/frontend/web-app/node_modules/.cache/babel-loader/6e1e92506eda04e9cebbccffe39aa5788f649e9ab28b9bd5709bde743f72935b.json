{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zbena\\\\Documents\\\\GitHub\\\\SoftwareProjectTracker\\\\mysite\\\\frontend\\\\web-app\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n  let updateToken = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading, updateToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"dY0yy5oTmQZhiPgZi3kbwcyQL5U=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zbena/Documents/GitHub/SoftwareProjectTracker/mysite/frontend/web-app/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  let [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate()\r\n\r\n  let loginUser = async (e) => {\r\n    e.preventDefault();\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: e.target.username.value,\r\n        password: e.target.password.value,\r\n      }),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  let logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  let updateToken = async () => {\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh: authTokens?.refresh }),\r\n    });\r\n\r\n    let data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n    } else {\r\n      logoutUser();\r\n    }\r\n\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  let contextData = {\r\n    user: user,\r\n    authTokens: authTokens,\r\n    loginUser: loginUser,\r\n    logoutUser: logoutUser,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      updateToken();\r\n    }\r\n\r\n    let fourMinutes = 1000 * 60 * 4;\r\n\r\n    let interval = setInterval(() => {\r\n      if (authTokens) {\r\n        updateToken();\r\n      }\r\n    }, fourMinutes);\r\n    return () => clearInterval(interval);\r\n  }, [authTokens, loading, updateToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {loading ? null : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}