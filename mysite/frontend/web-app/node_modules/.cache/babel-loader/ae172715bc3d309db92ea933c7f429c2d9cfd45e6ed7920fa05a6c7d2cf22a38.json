{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loisp\\\\Documents\\\\GitHub\\\\SoftwareProjectTracker\\\\mysite\\\\frontend\\\\web-app\\\\src\\\\pages\\\\Projects.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { ListPeople } from \"../components/ListPeople\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = props => {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n  const [date, setDate] = useState(new Date());\n  let [projects, setProjects] = useState([]);\n  useEffect(() => {\n    getProjects();\n  }, []);\n  let getProjects = async () => {\n    let response = await fetch(\"/api/projects/1/members/\");\n    let data = await response.json();\n    console.log(\"Data:\", data);\n    setProjects(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"This is the projects page for \", state.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" THIS IS A LIST OF PEOPLE \", projects.map((project, index) => /*#__PURE__*/_jsxDEV(ListPeople, {\n        project: project\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/people\",\n        children: \"People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"hnOQoBToY8P3KfAetcEgTMB1Tj0=\", false, function () {\n  return [useLocation];\n});\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Link","useLocation","useEffect","useState","ListPeople","jsxDEV","_jsxDEV","Projects","props","_s","location","state","date","setDate","Date","projects","setProjects","getProjects","response","fetch","data","json","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","to","_c","$RefreshReg$"],"sources":["C:/Users/loisp/Documents/GitHub/SoftwareProjectTracker/mysite/frontend/web-app/src/pages/Projects.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {ListPeople }from \"../components/ListPeople\";\r\n\r\n\r\n\r\nexport const Projects = (props) => {\r\n    const location = useLocation();\r\n    const state = location.state;\r\n\r\n    const [date,setDate] = useState(new Date());\r\n    let [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    let getProjects = async () => {\r\n        let response = await fetch(\"/api/projects/1/members/\");\r\n        let data = await response.json();\r\n        console.log(\"Data:\", data);\r\n        setProjects(data);\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n\r\n        <div> \r\n\r\n            <h2> \r\n                This is the projects page for {state.name}!\r\n            </h2>\r\n\r\n            <p> THIS IS A LIST OF PEOPLE {projects.map((project, index) => (\r\n             <ListPeople key={index} project={project} />\r\n            ))} </p>\r\n\r\n            <h3><Link to=\"/people\">People</Link></h3>\r\n                \r\n\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,UAAU,QAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIpD,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,KAAK,GAAGD,QAAQ,CAACC,KAAK;EAE5B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,EAAE,CAAC;EAC3C,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZe,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,CAAC;IACtD,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC1BJ,WAAW,CAACI,IAAI,CAAC;EACrB,CAAC;EAID,oBAEId,OAAA;IAAAkB,QAAA,gBAEIlB,OAAA;MAAAkB,QAAA,GAAI,gCAC8B,EAACb,KAAK,CAACc,IAAI,EAAC,GAC9C;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAELvB,OAAA;MAAAkB,QAAA,GAAG,4BAA0B,EAACT,QAAQ,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzD1B,OAAA,CAACF,UAAU;QAAa2B,OAAO,EAAEA;MAAQ,GAAxBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtB,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAERvB,OAAA;MAAAkB,QAAA,eAAIlB,OAAA,CAACN,IAAI;QAACiC,EAAE,EAAC,SAAS;QAAAT,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGvC;AAEd,CAAC;AAAApB,EAAA,CArCYF,QAAQ;EAAA,QACAN,WAAW;AAAA;AAAAiC,EAAA,GADnB3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}